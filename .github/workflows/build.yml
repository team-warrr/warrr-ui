name: PR 빌드 및 테스트 자동화
on: [pull_request]

permissions:
  contents: read
  pull-requests: write

jobs:
  install-cache:
    runs-on: ubuntu-latest
    steps:
      - name: 레포지토리 체크아웃
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 환경 변수 설정
        id: set-env
        run: |
          chmod +x ./scripts/set-env.sh
          ./scripts/set-env.sh

      - name: node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: pnpm 설치
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: pnpm 의존성 캐시
        id: cache-pnpm
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: 의존성 설치
        run: |
          chmod +x ./scripts/install-dependencies.sh
          ./scripts/install-dependencies.sh

  unit-test:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - name: 레포지토리 체크아웃
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 환경 변수 설정
        id: set-env
        run: |
          chmod +x ./scripts/set-env.sh
          ./scripts/set-env.sh

      - name: node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: pnpm 설치
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: pnpm 의존성 캐시
        id: cache-pnpm
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: 의존성 설치
        run: |
          chmod +x ./scripts/install-dependencies.sh
          ./scripts/install-dependencies.sh

      - name: 유닛 테스트
        run: pnpm run test

      - name: 유닛 테스트 실패
        uses: actions/github-script@v6
        if: failure()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## 유닛 테스트 실패 \n\n 유닛 테스트가 실패하였습니다. 코드를 점검해주세요!'
            })

  build:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: 레포지토리 체크아웃
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 환경 변수 설정
        id: set-env
        run: |
          chmod +x ./scripts/set-env.sh
          ./scripts/set-env.sh

      - name: node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: pnpm 설치
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: pnpm 의존성 캐시
        id: cache-pnpm
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: 의존성 설치
        run: |
          chmod +x ./scripts/install-dependencies.sh
          ./scripts/install-dependencies.sh

      - name: 빌드 실행
        run: pnpm run build

      - name: 빌드 실패
        uses: actions/github-script@v6
        if: failure()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## 빌드 실패 \n\n 빌드가 실패하였습니다. 코드를 점검해주세요!'
            })
