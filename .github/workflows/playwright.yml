name: Storybook Playwright Tests
run-name: ${{ github.actor }}의 Playwright 시각적 회귀, 접근성 테스트

on:
  pull_request:
    branches:
      - develop

jobs:
  vrt:
    runs-on: ubuntu-latest

    steps:
      - name: 레포지토리 체크아웃
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: pnpm 설치
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: 의존성 설치
        run: pnpm install --no-frozen-lockfile

      - name: Playwright 브라우저 설치
        run: pnpm exec playwright install --with-deps

      - name: 스토리북 빌드
        run: npx storybook build
        working-directory: packages/primitive

      - name: 스토리북 실행
        id: storybook
        working-directory: packages/primitive
        run: |
          npx serve -l 6006 storybook-static &
          echo "storybook_pid=$!" >> $GITHUB_OUTPUT
          echo "Storybook PID: $!"
          sleep 5

      # - name: Playwright 디렉토리 구조 확인
      #   if: always()
      #   run: |
      #     echo "Playwright directory structure:"
      #     if [ -d ".playwright" ]; then
      #       find .playwright -type d -print0 | while IFS= read -r -d '' dir; do
      #         echo "Directory: $dir"
      #         ls -la "$dir"
      #         echo "-------------------"
      #       done

      #       echo "All files in .playwright directory (including subdirectories):"
      #       find .playwright -type f
      #     else
      #       echo ".playwright directory not found. Checking current directory:"
      #       pwd
      #       ls -la
      #       echo "Checking for any playwright-related directories:"
      #       find . -maxdepth 2 -type d -name "*playwright*" -print0 | while IFS= read -r -d '' dir; do
      #         echo "Found directory: $dir"
      #         ls -la "$dir"
      #         echo "-------------------"
      #       done
      #     fi

      - name: Playwright 테스트 실행
        run: pnpm run e2e
        env:
          CI: true

      - name: 테스트 결과 업로드
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: vrt-report
          path: .playwright/
          retention-days: 1

      - name: PR에 코멘트 작성
        uses: actions/github-script@v6
        if: always()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${{steps.test-summary.outputs.summary}}

              [상세 테스트 결과 보기](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})`
            })

      - name: Storybook 프로세스 종료
        if: always()
        run: |
          if [ -n "${{ steps.storybook.outputs.storybook_pid }}" ]; then
            echo "Stopping Storybook process with PID ${{ steps.storybook.outputs.storybook_pid }}"
            kill ${{ steps.storybook.outputs.storybook_pid }} || true
          else
            echo "Storybook PID not found, trying to kill all serve processes"
            pkill -f "serve -l 6006" || true
          fi
